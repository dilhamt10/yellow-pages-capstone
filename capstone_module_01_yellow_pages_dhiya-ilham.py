# -*- coding: utf-8 -*-
"""Capstone Module 01_Yellow Pages

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bbjG6XXmgMZZML5l7XZG2XahSHd31H_F

## Yellow Pages Capstone
### by Dhiya Ilham - JCDSOL-19-04

### Import Data & Create Initial Database (CREATE)
"""

import pandas as pd

# CREATE - Initiate database
yellow_pages = {
    "Name": ["Papaya Fresh Gallery - Blok M", "Ayam Renald Blok M"
      , "Filosofi Kopi Melawai"],
    "Category": ["Supermarket", "Restaurant", "Cafe"],
    "Address": ["Jl. Melawai Raya No.28", "Blk. M Square, Jl. Melawai Raya"
      , "Kawasan Terpadu Blok M Square, Jl. Melawai 6 No.1"],
    "Postal Code": ["12160", "12160", "12160"],
    "Tel. Number": ["02172793777", "081298905401", "08170737125"],
    "Updated at": [None, None, None],  # column for tracking updates
}

# Create DataFrame
df = pd.DataFrame(yellow_pages)

# Create the index (make it real-world, i.e. start from 1)
df.index = [1, 2, 3]

print(df)

# MENU LIST

def daftar_yp():
    print("\nMenu List:")
    print("1. Display the Yellow Pages") #READ
    print("2. Append the Yellow Pages") #CREATE
    print("3. Delete list of Yellow Pages") #mention the index #DELETE
    print("4. Update list of Yellow Pages") #mention the index #UPDATE
    print("5. Exit program")

def input_daftar():
    try:
        pilihan = int(input("Please input the menu list number you want to run: "))
        return pilihan
    except ValueError:
        print("Enter a valid number.")
        return None

"""### 1) Menampilkan daftar Yellow Pages (READ)"""

def menampilkan_daftar_yellowpages():
    global df

print("\nWelcome to the Yellow Pages")
print("List of the Yellow Pages:\n")
print(df) #Update the latest list of yellow pages

"""### 2) Menambah Daftar Yellow Pages (CREATE)"""

from datetime import datetime

# Function to append data to a new index
def menambah_daftar_yellowpages():
    global df

    # Get user inputs for all fields
    name = input("Please input Name of place: ")
    category = input("Please input Category of the place: ")
    address = input("Please the location Address: ")
    postalCode = input("Please the Postal Code: ")
    telNumber = input("Please input the Telephone Number: ")

    # Assign inputs to a new index
    new_index = len(df) + 1  # Automatically assign the new index as the next available index, because the initial index starts from 1.
    df.at[new_index, "Name"] = name
    df.at[new_index, "Category"] = category
    df.at[new_index, "Address"] = address
    df.at[new_index, "Postal Code"] = postalCode
    df.at[new_index, "Tel. Number"] = telNumber

    # Update the 'Updated at' column with the current timestamp
    df.at[new_index, "Updated at"] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    print(f"\nPlace with Name \"{name}\" successfully added to index {new_index}.")

# Run the function to add a new record
menambah_daftar_yellowpages()

# Display the updated DataFrame
print(df)

"""### 3) Menghapus Daftar Yellow Pages (DELETE)"""

def menghapus_daftar_yellowpages():
    global df
    print("\n", df)

    try:
        index = int(input("\nEnter the index of the Place you want to delete: "))
        if index in df.index:
            df.drop(index, inplace=True)  # Delete the index of the Place
            print(f"\nThe place at index {index} was successfully deleted.\n")
        else:
            print("Index not found.")
    except ValueError:
        print("Enter a valid index (number).")

menghapus_daftar_yellowpages()
print(df)

"""### 4) Update Daftar Yellow Pages (UPDATE)"""

from datetime import datetime

# Function to update a record in the DataFrame by index
def update_daftar_yellowpages(df):
    print("\n", df)

    # Ask the user for the index they want to update
    try:
        index = int(input("Enter the index of the record you want to update: "))
        if index < 1 or index >= len(df) + 1:
            print("Invalid index!")
            return df
    except ValueError:
        print("Index must be an integer!")
        return df

    edited_fields = []  # To track which fields were edited

    old_name = df.at[index, "Name"]
    new_name = input(f"Current Name: \"{old_name}\". \nEnter new Name or 'N' to skip: ")
    if new_name.lower() != 'n':
        df.at[index, "Name"] = new_name
        edited_fields.append(f"\nName \t\t: \"{old_name}\" to \"{new_name}\"")

    old_category = df.at[index, "Category"]
    new_category = input(f"Current Category: \"{old_category}\". \nEnter new Category or 'N' to skip: ")
    if new_category.lower() != 'n':
        df.at[index, "Category"] = new_category
        edited_fields.append(f"\nCategory \t: \"{old_category}\" to \"{new_category}\"")

    old_address = df.at[index, "Address"]
    new_address = input(f"Current Address: \"{old_address}\". \nEnter new Address or 'N' to skip: ")
    if new_address.lower() != 'n':
        df.at[index, "Address"] = new_address
        edited_fields.append(f"\nAddress \t: \"{old_address}\" to \"{new_address}\"")

    old_postal_code = df.at[index, "Postal Code"]
    new_postal_code = input(f"Current Postal Code: \"{old_postal_code}\". \nEnter new Postal Code or 'N' to skip: ")
    if new_postal_code.lower() != 'n':
        df.at[index, "Postal Code"] = new_postal_code
        edited_fields.append(f"\nPostal Code \t: \"{old_postal_code}\" to \"{new_postal_code}\"")

    old_tel_number = df.at[index, "Tel. Number"]
    new_tel_number = input(f"Current Tel. Number: \"{old_tel_number}\". \nEnter new Tel Number or 'N' to skip: ")
    if new_tel_number.lower() != 'n':
        df.at[index, "Tel. Number"] = new_tel_number
        edited_fields.append(f"\nTel. Number \t: \"{old_tel_number}\" to \"{new_tel_number}\"")

    # Update the 'Updated_at' field if any fields were edited
    if edited_fields:
        df.at[index, 'Updated at'] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        print("\nUpdate completed!")
        print(f"\nFields updated: {' '.join(edited_fields)}")

    return df

df = update_daftar_yellowpages(df)
print("\nUpdated Data:")
print(df)

"""### 5) Exit program"""

while True:
    daftar_yp()
    pilihan = input_daftar()

    if pilihan == 1:
        menampilkan_daftar_yellowpages()
        print("\nWelcome to the Yellow Pages")
        print("List of the Yellow Pages:\n")
        print(df) #Update list of the latest yellow pages
    elif pilihan == 2:
        menambah_daftar_yellowpages()
        print(df)
    elif pilihan == 3:
        menghapus_daftar_yellowpages()
        print(df)
    elif pilihan == 4:
        df = update_daftar_yellowpages(df)
        print("\nUpdated Data:")
        print(df)
    elif pilihan == 5:
        print("\nThank you for visiting the Yellow Pages.")
        break
    else:
        print("Invalid selection. Please try again.")